{"version":3,"file":"plugin.mjs","sourceRoot":"","sources":["../src/plugin.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,eAAe,EAAE,4BAA4B;AACtD,OAAO,EACL,aAAa,EACb,UAAU,EACV,iBAAiB,EACjB,gBAAgB,EACjB,mCAAmC;AAEpC,OAAO,EAAE,MAAM,EAAE,wBAAwB;AACzC,OAAO,SAAS,aAAa;AAC7B,OAAO,EAAE,SAAS,EAAE,aAAa;;;;;AAKjC,MAAM,WAAW,GAAG,oBAAoB,CAAC;AAWzC,MAAM,CAAC,OAAO,OAAO,kBAAkB;IAGrC;;;;;;;;;;;;;OAaG;IACH,YAAY,OAA0B;QACpC,IAAI,CAAC,OAAO,GAAG;YACb,IAAI,EAAE,IAAI;YACV,YAAY,EAAE,SAAS,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,EAAE,EAAE,oBAAoB,CAAC;YACjE,aAAa,EAAE,IAAI;YACnB,GAAG,OAAO;SACX,CAAC;IACJ,CAAC;IAED;;;;;OAKG;IACH,KAAK,CAAC,QAAkB;QACtB,MAAM,EAAE,OAAO,EAAE,GAAG,QAAQ,CAAC,OAAO,CAAC;QAErC,QAAQ,CAAC,KAAK,CAAC,WAAW,CAAC,GAAG,CAAC,WAAW,EAAE,CAAC,WAAW,EAAE,EAAE;YAC1D,WAAW,CAAC,KAAK,CAAC,aAAa,CAAC,GAAG,CACjC;gBACE,IAAI,EAAE,WAAW;gBACjB,KAAK,EAAE,WAAW,CAAC,2CAA2C;gBAC9D,gBAAgB,EAAE,IAAI;aACvB,EACD,CAAC,MAAM,EAAE,EAAE;gBACT,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC;qBAChB,MAAM,CAAC,CAAC,SAAS,EAAE,EAAE,CAAC,SAAS,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;qBAChD,OAAO,CAAC,CAAC,SAAS,EAAE,EAAE;oBACrB,MAAM,KAAK,GAAG,MAAM,CAAC,SAAS,CAAC,CAAC;oBAChC,MAAM,MAAM,GAAG,KAAK,CAAC,MAAM,EAAY,CAAC;oBACxC,MAAM,SAAS,GAAG,KAAK,CAAC,GAAG,EAAE,CAAC;oBAE9B,IAAI,CAAC;wBACH,MAAM,SAAS,GAAG,iBAAiB,CAAC,MAAM,EAAE;4BAC1C,GAAG,IAAI,CAAC,OAAO;4BACf,SAAS,EAAE,OAAO,CAAC,OAAO,CAAC;4BAC3B,cAAc,EAAE,OAAO;gCACrB,CAAC,CAAE,SAAuB;gCAC1B,CAAC,CAAC,SAAS;yBACd,CAAC,CAAC;wBAEH,IAAI,SAAS,CAAC,QAAQ,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC;4BAClC,MAAM,aAAa,GAAG,SAAS,CAAC,QAAQ,CAAC,GAAG,CAC1C,CAAC,OAAO,EAAE,EAAE,CAAC,IAAI,YAAY,CAAC,OAAO,CAAC,CACvC,CAAC;4BAEF,WAAW,CAAC,QAAQ,CAAC,IAAI,CAAC,GAAG,aAAa,CAAC,CAAC;wBAC9C,CAAC;wBAED,MAAM,WAAW,GAAG,SAAS,CAAC,SAAS;4BACrC,CAAC,CAAC,IAAI,eAAe,CACjB,SAAS,CAAC,IAAI,EACd,SAAS,EACT,SAAS,CAAC,SAAS,EACnB,MAAM,EACN,SAAsB,CACvB;4BACH,CAAC,CAAC,IAAI,SAAS,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;wBAElC,iEAAiE;wBACjE,mEAAmE;wBACnE,WAAW,CAAC,WAAW,CAAC,SAAS,EAAE,WAAkB,CAAC,CAAC;oBACzD,CAAC;oBAAC,OAAO,KAAK,EAAE,CAAC;wBACf,WAAW,CAAC,MAAM,CAAC,IAAI,CACrB,IAAI,YAAY,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC,CACzC,CAAC;oBACJ,CAAC;gBACH,CAAC,CAAC,CAAC;YACP,CAAC,CACF,CAAC;QACJ,CAAC,CAAC,CAAC;QAEH,QAAQ,CAAC,KAAK,CAAC,SAAS,CAAC,UAAU,CAAC,WAAW,EAAE,KAAK,EAAE,WAAW,EAAE,EAAE;YACrE,MAAM,IAAI,GAAG,WAAW;iBACrB,SAAS,EAAE;iBACX,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE,CAAC,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;YAE/C,MAAM,CAAC,IAAI,CAAC,CAAC;YAEb,MAAM,CAAC,WAAW,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;YACvC,MAAM,UAAU,GAAG,WAAW,CAAC,aAAa,CAAC,IAAI,CAAC;YAElD,MAAM,QAAQ,GAAG,SAAS,CAAC,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;YAEvD,MAAM,UAAU,GAAG,MAAM,SAAS,CAChC,QAAQ,CAAC,gBAAgB,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,gBAAgB,CAAC,CACnE,CAAC,QAAQ,CAAC,CAAC;YACZ,MAAM,CAAC,UAAU,CAAC,CAAC;YAEnB,MAAM,aAAa,GAAG,UAAU,CAAC,QAAQ,EAAE,CAAC;YAE5C,IAAI,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;gBACtB,MAAM,gBAAgB,CAAC,iBAAiB,EAAE,aAAa,EAAE,CAAC,IAAI,EAAE,EAAE,CAChE,UAAU,CAAC,IAAI,CAAC,CACjB,CAAC;YACJ,CAAC;YAED,IAAI,IAAI,CAAC,OAAO,CAAC,YAAY,EAAE,CAAC;gBAC9B,MAAM,EAAE,OAAO,EAAE,GAAG,MAAM,aAAa,CACrC,SAAS,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,YAAY,CAAC,EAC5C;oBACE,sBAAsB,EAAE,IAAI,CAAC,OAAO,CAAC,aAAa;oBAClD,UAAU,EAAE,aAAa;oBACzB,WAAW,EAAE,SAAS,CACpB,QAAQ,CAAC,gBAAgB,CAAC,SAAS,CAAC,IAAI,CACtC,QAAQ,CAAC,gBAAgB,CAC1B,CACF;iBACF,CACF,CAAC;gBAEF,MAAM,MAAM,GAAG,OAAO;qBACnB,MAAM,CAAC,CAAC,MAAM,EAAE,EAAE,CAAC,MAAM,CAAC,QAAQ,KAAK,OAAO,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC;qBACnE,GAAG,CAAC,CAAC,MAAM,EAAE,EAAE,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;gBACnC,MAAM,QAAQ,GAAG,OAAO;qBACrB,MAAM,CAAC,CAAC,MAAM,EAAE,EAAE,CAAC,MAAM,CAAC,QAAQ,KAAK,SAAS,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC;qBACrE,GAAG,CAAC,CAAC,MAAM,EAAE,EAAE,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;gBACnC,MAAM,KAAK,GAAG,OAAO;qBAClB,MAAM,CAAC,CAAC,MAAM,EAAE,EAAE,CAAC,MAAM,CAAC,QAAQ,CAAC;qBACnC,GAAG,CAAC,CAAC,MAAM,EAAE,EAAE,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;gBAEnC,IAAI,MAAM,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC;oBACtB,WAAW,CAAC,MAAM,CAAC,IAAI,CACrB,GAAG,MAAM,CAAC,GAAG,CAAC,CAAC,KAAK,EAAE,EAAE,CAAC,IAAI,YAAY,CAAC,KAAK,CAAC,CAAC,CAClD,CAAC;gBACJ,CAAC;gBAED,IAAI,QAAQ,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC;oBACxB,WAAW,CAAC,QAAQ,CAAC,IAAI,CACvB,GAAG,QAAQ,CAAC,GAAG,CAAC,CAAC,OAAO,EAAE,EAAE,CAAC,IAAI,YAAY,CAAC,OAAO,CAAC,CAAC,CACxD,CAAC;gBACJ,CAAC;gBAED,IAAI,KAAK,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC;oBACrB,WAAW,CAAC,QAAQ,CAAC,IAAI,CACvB,GAAG,KAAK,CAAC,GAAG,CAAC,CAAC,OAAO,EAAE,EAAE,CAAC,IAAI,YAAY,CAAC,GAAG,OAAO,UAAU,CAAC,CAAC,CAClE,CAAC;gBACJ,CAAC;YACH,CAAC;QACH,CAAC,CAAC,CAAC;IACL,CAAC;CACF","sourcesContent":["import { getErrorMessage } from '@metamask/snaps-sdk';\nimport {\n  checkManifest,\n  evalBundle,\n  postProcessBundle,\n  useTemporaryFile,\n} from '@metamask/snaps-utils/node';\nimport type { PostProcessOptions, SourceMap } from '@metamask/snaps-utils/node';\nimport { assert } from '@metamask/utils';\nimport pathUtils from 'path';\nimport { promisify } from 'util';\nimport type { Compiler } from 'webpack';\nimport { Compilation, WebpackError } from 'webpack';\nimport { RawSource, SourceMapSource } from 'webpack-sources';\n\nconst PLUGIN_NAME = 'SnapsWebpackPlugin';\n\ntype PluginOptions = {\n  eval?: boolean;\n  manifestPath?: string;\n  writeManifest?: boolean;\n};\n\nexport type Options = PluginOptions &\n  Omit<PostProcessOptions, 'sourceMap' | 'inputSourceMap'>;\n\nexport default class SnapsWebpackPlugin {\n  public readonly options: Partial<Options>;\n\n  /**\n   * Construct an instance of the plugin.\n   *\n   * @param options - The post-process options.\n   * @param options.stripComments - Whether to strip comments. Defaults to\n   * `true`.\n   * @param options.eval - Whether to evaluate the bundle to test SES\n   * compatibility. Defaults to `true`.\n   * @param options.manifestPath - The path to the manifest file. If provided,\n   * the manifest will be validated. Defaults to\n   * `process.cwd() + '/snap.manifest.json'`.\n   * @param options.writeManifest - Whether to fix the manifest.\n   * Defaults to `true`.\n   */\n  constructor(options?: Partial<Options>) {\n    this.options = {\n      eval: true,\n      manifestPath: pathUtils.join(process.cwd(), 'snap.manifest.json'),\n      writeManifest: true,\n      ...options,\n    };\n  }\n\n  /**\n   * Apply the plugin to the Webpack compiler. Hooks into the `processAssets`\n   * stage to process the bundle.\n   *\n   * @param compiler - The Webpack compiler.\n   */\n  apply(compiler: Compiler) {\n    const { devtool } = compiler.options;\n\n    compiler.hooks.compilation.tap(PLUGIN_NAME, (compilation) => {\n      compilation.hooks.processAssets.tap(\n        {\n          name: PLUGIN_NAME,\n          stage: Compilation.PROCESS_ASSETS_STAGE_OPTIMIZE_COMPATIBILITY,\n          additionalAssets: true,\n        },\n        (assets) => {\n          Object.keys(assets)\n            .filter((assetName) => assetName.endsWith('.js'))\n            .forEach((assetName) => {\n              const asset = assets[assetName];\n              const source = asset.source() as string;\n              const sourceMap = asset.map();\n\n              try {\n                const processed = postProcessBundle(source, {\n                  ...this.options,\n                  sourceMap: Boolean(devtool),\n                  inputSourceMap: devtool\n                    ? (sourceMap as SourceMap)\n                    : undefined,\n                });\n\n                if (processed.warnings.length > 0) {\n                  const webpackErrors = processed.warnings.map(\n                    (warning) => new WebpackError(warning),\n                  );\n\n                  compilation.warnings.push(...webpackErrors);\n                }\n\n                const replacement = processed.sourceMap\n                  ? new SourceMapSource(\n                      processed.code,\n                      assetName,\n                      processed.sourceMap,\n                      source,\n                      sourceMap as SourceMap,\n                    )\n                  : new RawSource(processed.code);\n\n                // For some reason the type of `RawSource` is not compatible with\n                // Webpack's own `Source`, but works fine when casting it to `any`.\n                compilation.updateAsset(assetName, replacement as any);\n              } catch (error) {\n                compilation.errors.push(\n                  new WebpackError(getErrorMessage(error)),\n                );\n              }\n            });\n        },\n      );\n    });\n\n    compiler.hooks.afterEmit.tapPromise(PLUGIN_NAME, async (compilation) => {\n      const file = compilation\n        .getAssets()\n        .find((asset) => asset.name.endsWith('.js'));\n\n      assert(file);\n\n      assert(compilation.outputOptions.path);\n      const outputPath = compilation.outputOptions.path;\n\n      const filePath = pathUtils.join(outputPath, file.name);\n\n      const bundleFile = await promisify(\n        compiler.outputFileSystem.readFile.bind(compiler.outputFileSystem),\n      )(filePath);\n      assert(bundleFile);\n\n      const bundleContent = bundleFile.toString();\n\n      if (this.options.eval) {\n        await useTemporaryFile('snaps-bundle.js', bundleContent, (path) =>\n          evalBundle(path),\n        );\n      }\n\n      if (this.options.manifestPath) {\n        const { reports } = await checkManifest(\n          pathUtils.dirname(this.options.manifestPath),\n          {\n            updateAndWriteManifest: this.options.writeManifest,\n            sourceCode: bundleContent,\n            writeFileFn: promisify(\n              compiler.outputFileSystem.writeFile.bind(\n                compiler.outputFileSystem,\n              ),\n            ),\n          },\n        );\n\n        const errors = reports\n          .filter((report) => report.severity === 'error' && !report.wasFixed)\n          .map((report) => report.message);\n        const warnings = reports\n          .filter((report) => report.severity === 'warning' && !report.wasFixed)\n          .map((report) => report.message);\n        const fixed = reports\n          .filter((report) => report.wasFixed)\n          .map((report) => report.message);\n\n        if (errors.length > 0) {\n          compilation.errors.push(\n            ...errors.map((error) => new WebpackError(error)),\n          );\n        }\n\n        if (warnings.length > 0) {\n          compilation.warnings.push(\n            ...warnings.map((warning) => new WebpackError(warning)),\n          );\n        }\n\n        if (fixed.length > 0) {\n          compilation.warnings.push(\n            ...fixed.map((problem) => new WebpackError(`${problem} (fixed)`)),\n          );\n        }\n      }\n    });\n  }\n}\n"]}