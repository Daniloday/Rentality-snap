{"version":3,"file":"constants.mjs","sourceRoot":"","sources":["../src/constants.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n  NetworkType,\n  NetworksTicker,\n  ChainId,\n  BuiltInNetworkName,\n} from './types';\n\nexport const RPC = 'rpc';\nexport const FALL_BACK_VS_CURRENCY = 'ETH';\nexport const IPFS_DEFAULT_GATEWAY_URL = 'https://cloudflare-ipfs.com/ipfs/';\n\n// NETWORKS ID\n// `toHex` not invoked to avoid cyclic dependency\nexport const GANACHE_CHAIN_ID = '0x539'; // toHex(1337)\n/**\n * The largest possible chain ID we can handle.\n * Explanation: https://gist.github.com/rekmarks/a47bd5f2525936c4b8eee31a16345553\n */\nexport const MAX_SAFE_CHAIN_ID = 4503599627370476;\n\n// TOKEN STANDARDS\nexport const ERC721 = 'ERC721';\nexport const ERC1155 = 'ERC1155';\nexport const ERC20 = 'ERC20';\n\n// TOKEN INTERFACE IDS\nexport const ERC721_INTERFACE_ID = '0x80ac58cd';\nexport const ERC721_METADATA_INTERFACE_ID = '0x5b5e139f';\nexport const ERC721_ENUMERABLE_INTERFACE_ID = '0x780e9d63';\nexport const ERC1155_INTERFACE_ID = '0xd9b67a26';\nexport const ERC1155_METADATA_URI_INTERFACE_ID = '0x0e89341c';\nexport const ERC1155_TOKEN_RECEIVER_INTERFACE_ID = '0x4e2312e0';\n\n// UNITS\nexport const GWEI = 'gwei';\n\n// ASSET TYPES\nexport const ASSET_TYPES = {\n  NATIVE: 'NATIVE',\n  TOKEN: 'TOKEN',\n  NFT: 'NFT',\n  UNKNOWN: 'UNKNOWN',\n};\n\n// TICKER SYMBOLS\nexport const TESTNET_TICKER_SYMBOLS = {\n  GOERLI: 'GoerliETH',\n  SEPOLIA: 'SepoliaETH',\n  LINEA_GOERLI: 'LineaETH',\n  LINEA_SEPOLIA: 'LineaETH',\n};\n\n/**\n * Map of all build-in Infura networks to their network, ticker and chain IDs.\n */\nexport const BUILT_IN_NETWORKS = {\n  [NetworkType.goerli]: {\n    chainId: ChainId.goerli,\n    ticker: NetworksTicker.goerli,\n    rpcPrefs: {\n      blockExplorerUrl: `https://${NetworkType.goerli}.etherscan.io`,\n    },\n  },\n  [NetworkType.sepolia]: {\n    chainId: ChainId.sepolia,\n    ticker: NetworksTicker.sepolia,\n    rpcPrefs: {\n      blockExplorerUrl: `https://${NetworkType.sepolia}.etherscan.io`,\n    },\n  },\n  [NetworkType.mainnet]: {\n    chainId: ChainId.mainnet,\n    ticker: NetworksTicker.mainnet,\n    rpcPrefs: {\n      blockExplorerUrl: 'https://etherscan.io',\n    },\n  },\n  [NetworkType['linea-goerli']]: {\n    chainId: ChainId['linea-goerli'],\n    ticker: NetworksTicker['linea-goerli'],\n    rpcPrefs: {\n      blockExplorerUrl: 'https://goerli.lineascan.build',\n    },\n  },\n  [NetworkType['linea-sepolia']]: {\n    chainId: ChainId['linea-sepolia'],\n    ticker: NetworksTicker['linea-sepolia'],\n    rpcPrefs: {\n      blockExplorerUrl: 'https://sepolia.lineascan.build',\n    },\n  },\n  [NetworkType['linea-mainnet']]: {\n    chainId: ChainId['linea-mainnet'],\n    ticker: NetworksTicker['linea-mainnet'],\n    rpcPrefs: {\n      blockExplorerUrl: 'https://lineascan.build',\n    },\n  },\n  [NetworkType.rpc]: {\n    chainId: undefined,\n    blockExplorerUrl: undefined,\n    ticker: undefined,\n    rpcPrefs: undefined,\n  },\n} as const;\n\n// APIs\nexport const OPENSEA_PROXY_URL =\n  'https://proxy.api.cx.metamask.io/opensea/v1/api/v2';\n\nexport const NFT_API_BASE_URL = 'https://nft.api.cx.metamask.io';\n\nexport const NFT_API_VERSION = '1';\n\nexport const NFT_API_TIMEOUT = 15000;\n\n// Default origin for controllers\nexport const ORIGIN_METAMASK = 'metamask';\n\n/**\n * Approval request types for various operations.\n * These types are used by different controllers to create and manage\n * approval requests consistently.\n */\nexport enum ApprovalType {\n  AddEthereumChain = 'wallet_addEthereumChain',\n  ConnectAccounts = 'connect_accounts',\n  EthDecrypt = 'eth_decrypt',\n  EthGetEncryptionPublicKey = 'eth_getEncryptionPublicKey',\n  EthSignTypedData = 'eth_signTypedData',\n  PersonalSign = 'personal_sign',\n  ResultError = 'result_error',\n  ResultSuccess = 'result_success',\n  SnapDialogAlert = 'snap_dialog:alert',\n  SnapDialogConfirmation = 'snap_dialog:confirmation',\n  SnapDialogPrompt = 'snap_dialog:prompt',\n  SnapDialogDefault = 'snap_dialog',\n  SwitchEthereumChain = 'wallet_switchEthereumChain',\n  Transaction = 'transaction',\n  Unlock = 'unlock',\n  WalletConnect = 'wallet_connect',\n  WalletRequestPermissions = 'wallet_requestPermissions',\n  WatchAsset = 'wallet_watchAsset',\n}\n\nexport const CHAIN_ID_TO_ETHERS_NETWORK_NAME_MAP: Record<\n  ChainId,\n  BuiltInNetworkName\n> = {\n  [ChainId.goerli]: BuiltInNetworkName.Goerli,\n  [ChainId.sepolia]: BuiltInNetworkName.Sepolia,\n  [ChainId.mainnet]: BuiltInNetworkName.Mainnet,\n  [ChainId['linea-goerli']]: BuiltInNetworkName.LineaGoerli,\n  [ChainId['linea-sepolia']]: BuiltInNetworkName.LineaSepolia,\n  [ChainId['linea-mainnet']]: BuiltInNetworkName.LineaMainnet,\n  [ChainId.aurora]: BuiltInNetworkName.Aurora,\n};\n"]}