"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.repositoryMatch = void 0;
const fast_deep_equal_1 = __importDefault(require("fast-deep-equal"));
const deep_clone_1 = require("../../deep-clone.cjs");
const types_1 = require("../../types.cjs");
/**
 * Check if the repository object in manifest is the same as in package.json.
 */
exports.repositoryMatch = {
    severity: 'error',
    semanticCheck(files, context) {
        const packageJsonRepository = files.packageJson.result.repository;
        const manifestRepository = files.manifest.result.repository;
        if ((packageJsonRepository || manifestRepository) &&
            !(0, fast_deep_equal_1.default)(packageJsonRepository, manifestRepository)) {
            context.report(`"${types_1.NpmSnapFileNames.Manifest}" "repository" field does not match the "${types_1.NpmSnapFileNames.PackageJson}" "repository" field.`, ({ manifest }) => {
                manifest.repository = packageJsonRepository
                    ? (0, deep_clone_1.deepClone)(packageJsonRepository)
                    : undefined;
                return { manifest };
            });
        }
    },
};
//# sourceMappingURL=repository-match.cjs.map