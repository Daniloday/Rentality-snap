"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.isSnapManifest = void 0;
const superstruct_1 = require("@metamask/superstruct");
const structs_1 = require("../../structs.cjs");
const types_1 = require("../../types.cjs");
const validation_1 = require("../validation.cjs");
/**
 * Verify the structure of snap.manifest.json.
 */
exports.isSnapManifest = {
    severity: 'error',
    structureCheck(files, context) {
        if (!files.manifest) {
            return;
        }
        const [error] = (0, superstruct_1.validate)(files.manifest.result, validation_1.SnapManifestStruct);
        if (error) {
            for (const failure of error.failures()) {
                context.report(`"${types_1.NpmSnapFileNames.Manifest}" is invalid: ${(0, structs_1.getStructFailureMessage)(validation_1.SnapManifestStruct, failure, false)}`);
            }
        }
    },
};
//# sourceMappingURL=is-snap-manifest.cjs.map