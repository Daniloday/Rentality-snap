"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.SnapCaveatType = void 0;
var SnapCaveatType;
(function (SnapCaveatType) {
    /**
     * Permitted derivation paths, used by `snap_getBip32Entropy`.
     */
    SnapCaveatType["PermittedDerivationPaths"] = "permittedDerivationPaths";
    /**
     * Permitted coin types, used by `snap_getBip44Entropy`.
     */
    SnapCaveatType["PermittedCoinTypes"] = "permittedCoinTypes";
    /**
     * Caveat specifying a snap cronjob.
     */
    SnapCaveatType["SnapCronjob"] = "snapCronjob";
    /**
     * Caveat specifying access to the transaction origin, used by `endowment:transaction-insight`.
     */
    SnapCaveatType["TransactionOrigin"] = "transactionOrigin";
    /**
     * Caveat specifying access to the signature origin, used by `endowment:signature-insight`.
     */
    SnapCaveatType["SignatureOrigin"] = "signatureOrigin";
    /**
     * The origins that a Snap can receive JSON-RPC messages from.
     */
    SnapCaveatType["RpcOrigin"] = "rpcOrigin";
    /**
     * The origins that a Snap can receive keyring messages from.
     */
    SnapCaveatType["KeyringOrigin"] = "keyringOrigin";
    /**
     * Caveat specifying the snap IDs that can be interacted with.
     */
    SnapCaveatType["SnapIds"] = "snapIds";
    /**
     * Caveat specifying the CAIP-2 chain IDs that a snap can service, currently limited to `endowment:name-lookup`.
     */
    SnapCaveatType["ChainIds"] = "chainIds";
    /**
     * Caveat specifying the input that a name lookup snap can service, currently limited to `endowment:name-lookup`.
     */
    SnapCaveatType["LookupMatchers"] = "lookupMatchers";
    /**
     * Caveat specifying the max request time for a handler endowment.
     */
    SnapCaveatType["MaxRequestTime"] = "maxRequestTime";
})(SnapCaveatType || (exports.SnapCaveatType = SnapCaveatType = {}));
//# sourceMappingURL=caveats.cjs.map