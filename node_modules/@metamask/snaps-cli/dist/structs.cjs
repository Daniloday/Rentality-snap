"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.file = void 0;
const superstruct_1 = require("@metamask/superstruct");
const path_1 = require("path");
/**
 * A wrapper of `superstruct`'s `string` struct that coerces a value to a string
 * and resolves it relative to the current working directory. This is useful
 * for specifying file paths in a configuration file, as it allows the user to
 * use both relative and absolute paths.
 *
 * @returns The `superstruct` struct, which validates that the value is a
 * string, and resolves it relative to the current working directory.
 * @example
 * ```ts
 * const config = struct({
 *   file: file(),
 *   // ...
 * });
 *
 * const value = create({ file: 'path/to/file' }, config);
 * console.log(value.file); // /process/cwd/path/to/file
 * ```
 */
function file() {
    return (0, superstruct_1.coerce)((0, superstruct_1.string)(), (0, superstruct_1.string)(), (value) => {
        return (0, path_1.resolve)(process.cwd(), value);
    });
}
exports.file = file;
//# sourceMappingURL=structs.cjs.map