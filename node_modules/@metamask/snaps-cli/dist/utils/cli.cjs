"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.trimPathString = exports.sanitizeInputs = exports.TS_CONFIG_FILE = exports.CONFIG_FILE = void 0;
const path_1 = __importDefault(require("path"));
exports.CONFIG_FILE = 'snap.config.js';
exports.TS_CONFIG_FILE = 'snap.config.ts';
// CLI arguments whose values are file paths.
const pathArguments = new Set([
    'src',
    's',
    'dist',
    'd',
    'bundle',
    'b',
    'root',
    'r',
]);
/**
 * Sanitizes inputs. Currently normalizes "./" paths to ".".
 * Yargs handles other path normalization as specified in builders.
 *
 * @param argv - Arguments as an object generated by yargs.
 */
function sanitizeInputs(argv) {
    Object.keys(argv).forEach((key) => {
        if (typeof argv[key] === 'string') {
            // Node's path.normalize() does not do this
            if (argv[key] === './') {
                argv[key] = '.';
            }
            if (pathArguments.has(key)) {
                argv[key] = path_1.default.normalize(argv[key]);
            }
        }
    });
}
exports.sanitizeInputs = sanitizeInputs;
/**
 * Trims leading and trailing periods "." and forward slashes "/" from the
 * given path string.
 *
 * @param pathString - The path string to trim.
 * @returns The trimmed path string.
 */
function trimPathString(pathString) {
    return pathString.replace(/^[./]+|[./]+$/gu, '');
}
exports.trimPathString = trimPathString;
//# sourceMappingURL=cli.cjs.map