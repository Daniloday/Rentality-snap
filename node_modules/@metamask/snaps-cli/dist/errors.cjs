"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ConfigError = exports.CommandError = exports.CLIError = void 0;
const chalk_1 = require("chalk");
/**
 * An error that is thrown when the CLI fails. This is the base error for all
 * CLI errors. It is not thrown directly, but is instead extended by other
 * errors.
 *
 * This error is assumed to have all the information needed to display a
 * readable error message, so it does not include the stack trace when it is
 * thrown.
 */
class CLIError extends Error {
}
exports.CLIError = CLIError;
/**
 * An error that is thrown when a command fails.
 *
 * It wraps the error prefix in a bold red "Error" string.
 */
class CommandError extends CLIError {
    constructor(message, name = 'Error') {
        super(message);
        this.name = (0, chalk_1.bold)((0, chalk_1.red)(name));
    }
}
exports.CommandError = CommandError;
/**
 * An error that is thrown when the config file cannot be loaded.
 */
class ConfigError extends CommandError {
    constructor(message) {
        super(message, 'Config Error');
    }
}
exports.ConfigError = ConfigError;
//# sourceMappingURL=errors.cjs.map