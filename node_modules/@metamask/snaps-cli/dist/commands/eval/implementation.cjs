"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.evaluate = void 0;
const node_1 = require("@metamask/snaps-utils/node");
const chalk_1 = require("chalk");
const errors_1 = require("../../errors.cjs");
/**
 * Evaluate the given bundle in the SES environment. This is a wrapper around
 * {@link evalBundle} that throws a {@link CommandError} if the bundle cannot be
 * evaluated.
 *
 * @param path - The path to the bundle.
 * @returns The eval result.
 * @throws If the bundle cannot be evaluated.
 */
async function evaluate(path) {
    try {
        return await (0, node_1.evalBundle)(path);
    }
    catch (evalError) {
        if (evalError instanceof node_1.SnapEvalError) {
            throw new errors_1.CommandError(`Failed to evaluate snap bundle in SES. This is likely due to an incompatibility with the SES environment in your snap.\nReceived the following error from the SES environment:\n\n${(0, node_1.indent)((0, chalk_1.red)(evalError.output.stderr), 2)}`);
        }
        // If the error is not a `SnapEvalError`, we don't know what it is, so
        // we just throw it.
        throw evalError;
    }
}
exports.evaluate = evaluate;
//# sourceMappingURL=implementation.cjs.map