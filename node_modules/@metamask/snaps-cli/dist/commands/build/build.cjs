"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.buildHandler = void 0;
const node_1 = require("@metamask/snaps-utils/node");
const path_1 = require("path");
const errors_1 = require("../../errors.cjs");
const utils_1 = require("../../utils/index.cjs");
const eval_1 = require("../eval/index.cjs");
const implementation_1 = require("./implementation.cjs");
const steps = [
    {
        name: 'Checking the input file.',
        task: async ({ config }) => {
            const { input } = config;
            if (!(await (0, node_1.isFile)(input))) {
                throw new errors_1.CommandError(`Input file not found: "${input}". Make sure that the "input" field in your snap config is correct.`);
            }
        },
    },
    {
        name: 'Building the snap bundle.',
        task: async ({ config, spinner }) => {
            // We don't evaluate the bundle here, because it's done in a separate
            // step.
            return await (0, implementation_1.build)(config, { evaluate: false, spinner });
        },
    },
    {
        name: 'Evaluating the snap bundle.',
        condition: ({ config }) => config.evaluate,
        task: async ({ config, spinner }) => {
            const path = (0, path_1.resolve)(process.cwd(), config.output.path, config.output.filename);
            await (0, eval_1.evaluate)(path);
            (0, utils_1.info)(`Snap bundle evaluated successfully.`, spinner);
        },
    },
];
/**
 * Build all files in the given source directory to the given destination
 * directory.
 *
 * This creates the destination directory if it doesn't exist.
 *
 * @param config - The config object.
 * @returns Nothing.
 */
async function buildHandler(config) {
    return await (0, utils_1.executeSteps)(steps, {
        config,
    });
}
exports.buildHandler = buildHandler;
//# sourceMappingURL=build.cjs.map