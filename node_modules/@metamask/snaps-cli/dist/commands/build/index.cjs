"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const builders_1 = __importDefault(require("../../builders.cjs"));
const build_1 = require("./build.cjs");
const command = {
    command: ['build', 'b'],
    desc: 'Build snap from source',
    builder: (yarg) => {
        yarg
            .option('dist', builders_1.default.dist)
            .option('eval', builders_1.default.eval)
            .option('manifest', builders_1.default.manifest)
            .option('outfileName', builders_1.default.outfileName)
            .option('sourceMaps', builders_1.default.sourceMaps)
            .option('src', builders_1.default.src)
            .option('stripComments', builders_1.default.stripComments)
            .option('transpilationMode', builders_1.default.transpilationMode)
            .option('depsToTranspile', builders_1.default.depsToTranspile)
            .option('writeManifest', builders_1.default.writeManifest)
            .implies('writeManifest', 'manifest')
            .implies('depsToTranspile', 'transpilationMode');
    },
    handler: async (argv) => (0, build_1.buildHandler)(argv.context.config),
};
__exportStar(require("./implementation.cjs"), exports);
exports.default = command;
//# sourceMappingURL=index.cjs.map