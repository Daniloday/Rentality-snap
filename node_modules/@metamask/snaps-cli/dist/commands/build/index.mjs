import builders from "../../builders.mjs";
import { buildHandler } from "./build.mjs";
const command = {
    command: ['build', 'b'],
    desc: 'Build snap from source',
    builder: (yarg) => {
        yarg
            .option('dist', builders.dist)
            .option('eval', builders.eval)
            .option('manifest', builders.manifest)
            .option('outfileName', builders.outfileName)
            .option('sourceMaps', builders.sourceMaps)
            .option('src', builders.src)
            .option('stripComments', builders.stripComments)
            .option('transpilationMode', builders.transpilationMode)
            .option('depsToTranspile', builders.depsToTranspile)
            .option('writeManifest', builders.writeManifest)
            .implies('writeManifest', 'manifest')
            .implies('depsToTranspile', 'transpilationMode');
    },
    handler: async (argv) => buildHandler(argv.context.config),
};
export * from "./implementation.mjs";
export default command;
//# sourceMappingURL=index.mjs.map