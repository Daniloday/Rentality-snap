{"version":3,"file":"index.cjs","sourceRoot":"","sources":["../../../src/commands/manifest/index.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAEA,kEAAsC;AAEtC,6CAA6C;AAE7C,MAAM,OAAO,GAAG;IACd,OAAO,EAAE,CAAC,UAAU,EAAE,GAAG,CAAC;IAC1B,IAAI,EAAE,sCAAsC;IAC5C,OAAO,EAAE,CAAC,IAAgB,EAAE,EAAE;QAC5B,+DAA+D;QAC/D,IAAI,CAAC,MAAM,CAAC,eAAe,EAAE,kBAAQ,CAAC,aAAa,CAAC,CAAC;QAErD,mBAAmB;QACnB,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE,kBAAQ,CAAC,GAAG,CAAC,CAAC;IACnC,CAAC;IACD,OAAO,EAAE,KAAK,EAAE,IAAe,EAAE,EAAE,CACjC,IAAA,0BAAe,EAAC,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,EAAE,GAAG,EAAE,IAAI,CAAC,GAAG,EAAE,CAAC;CAC1D,CAAC;AAEF,uDAAiC;AACjC,kBAAe,OAAO,CAAC","sourcesContent":["import type yargs from 'yargs';\n\nimport builders from '../../builders';\nimport type { YargsArgs } from '../../types/yargs';\nimport { manifestHandler } from './manifest';\n\nconst command = {\n  command: ['manifest', 'm'],\n  desc: 'Validate the snap.manifest.json file',\n  builder: (yarg: yargs.Argv) => {\n    // Browserify options. These are merged into the config object.\n    yarg.option('writeManifest', builders.writeManifest);\n\n    // Webpack options.\n    yarg.option('fix', builders.fix);\n  },\n  handler: async (argv: YargsArgs) =>\n    manifestHandler(argv.context.config, { fix: argv.fix }),\n};\n\nexport * from './implementation';\nexport default command;\n"]}