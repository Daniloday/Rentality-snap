{"version":3,"file":"compiler.mjs","sourceRoot":"","sources":["../../src/webpack/compiler.ts"],"names":[],"mappings":";;AAIA,OAAO,EAAE,uBAAuB,EAAE,qBAAiB;AAEnD;;;;;;GAMG;AACH,MAAM,CAAC,KAAK,UAAU,WAAW,CAC/B,MAA8B,EAC9B,OAAwB;IAExB,MAAM,iBAAiB,GAAG,MAAM,uBAAuB,CAAC,MAAM,EAAE,OAAO,CAAC,CAAC;IACzE,MAAM,aAAa,GACjB,MAAM,CAAC,sBAAsB,EAAE,CAAC,iBAAiB,CAAC,IAAI,iBAAiB,CAAC;IAE1E,OAAO,OAAO,CAAC,aAAa,CAAC,CAAC;AAChC,CAAC","sourcesContent":["import { webpack } from 'webpack';\n\nimport type { ProcessedWebpackConfig } from '../config';\nimport type { WebpackOptions } from './config';\nimport { getDefaultConfiguration } from './config';\n\n/**\n * Get a Webpack compiler for the given config.\n *\n * @param config - The config object.\n * @param options - The Webpack options.\n * @returns The Webpack compiler.\n */\nexport async function getCompiler(\n  config: ProcessedWebpackConfig,\n  options?: WebpackOptions,\n) {\n  const baseWebpackConfig = await getDefaultConfiguration(config, options);\n  const webpackConfig =\n    config.customizeWebpackConfig?.(baseWebpackConfig) ?? baseWebpackConfig;\n\n  return webpack(webpackConfig);\n}\n"]}