{"version":3,"file":"builders.mjs","sourceRoot":"","sources":["../src/builders.ts"],"names":[],"mappings":"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","sourcesContent":["import type { Options } from 'yargs';\n\nexport enum TranspilationModes {\n  LocalAndDeps = 'localAndDeps',\n  LocalOnly = 'localOnly',\n  None = 'none',\n}\n\nconst builders: Record<string, Readonly<Options>> = {\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  config: {\n    alias: 'c',\n    describe: 'Path to config file',\n    type: 'string',\n    normalize: true,\n  },\n\n  fix: {\n    describe: 'Attempt to fix snap.manifest.json',\n    type: 'boolean',\n  },\n\n  input: {\n    alias: 'i',\n    describe: 'Snap bundle file to evaluate',\n    type: 'string',\n    normalize: true,\n  },\n\n  // Deprecated Browserify options.\n  bundle: {\n    alias: 'b',\n    describe: 'Snap bundle file',\n    type: 'string',\n    normalize: true,\n    deprecated: 'Use --input instead.',\n  },\n\n  dist: {\n    alias: 'd',\n    describe: 'Output directory',\n    type: 'string',\n    normalize: true,\n    deprecated: true,\n  },\n\n  eval: {\n    alias: 'e',\n    describe: 'Attempt to evaluate Snap bundle in SES',\n    type: 'boolean',\n    deprecated: true,\n  },\n\n  manifest: {\n    alias: 'm',\n    describe: 'Validate snap.manifest.json',\n    type: 'boolean',\n    deprecated: true,\n  },\n\n  port: {\n    alias: 'p',\n    describe: 'Local server port for testing',\n    type: 'number',\n    coerce: (arg: unknown) => {\n      const port = Number.parseInt(String(arg), 10);\n      if (Number.isNaN(port)) {\n        throw new Error(`Invalid port: \"${String(arg)}\".`);\n      }\n\n      return port;\n    },\n    deprecated: true,\n  },\n\n  outfileName: {\n    alias: 'n',\n    describe: 'Output file name',\n    type: 'string',\n    deprecated: true,\n  },\n\n  root: {\n    alias: 'r',\n    describe: 'Server root directory',\n    type: 'string',\n    normalize: true,\n    deprecated: true,\n  },\n\n  sourceMaps: {\n    describe: 'Whether builds include sourcemaps',\n    type: 'boolean',\n    deprecated: true,\n  },\n\n  src: {\n    alias: 's',\n    describe: 'Source file',\n    type: 'string',\n    normalize: true,\n    deprecated: true,\n  },\n\n  stripComments: {\n    alias: 'strip',\n    describe: 'Whether to remove code comments from the build output',\n    type: 'boolean',\n    deprecated: true,\n  },\n\n  suppressWarnings: {\n    type: 'boolean',\n    describe: 'Whether to suppress warnings',\n    deprecated: true,\n  },\n\n  transpilationMode: {\n    type: 'string',\n    describe:\n      'Whether to use Babel to transpile all source code (including dependencies), local source code only, or nothing',\n    choices: Object.values(TranspilationModes),\n    deprecated: true,\n  },\n\n  depsToTranspile: {\n    type: 'array',\n    describe: 'Transpile only the listed dependencies.',\n    deprecated: true,\n  },\n\n  verboseErrors: {\n    type: 'boolean',\n    describe: 'Display original errors',\n    deprecated: true,\n  },\n\n  writeManifest: {\n    describe: 'Make necessary changes to the snap manifest file',\n    type: 'boolean',\n    deprecated: true,\n  },\n\n  serve: {\n    describe: 'Serve snap file(s) locally for testing',\n    type: 'boolean',\n    deprecated: true,\n  },\n};\n\nexport default builders;\n"]}